{
	Tools = ordered() {
		bfxTransitions = GroupOperator {
			CtrlWZoom = false,
			Inputs = ordered() {
				background = InstanceInput {
					SourceOp = "PipeRouter1",
					Source = "Input",
				},
				foreground = InstanceInput {
					SourceOp = "PipeRouter2",
					Source = "Input",
				},
				Input1 = InstanceInput {
					SourceOp = "gui",
					Source = "PanMode",
				},
				panNest = InstanceInput {
					SourceOp = "gui",
					Source = "panNest",
					Expression = "iif(PanMode==0,1,0)",
				},
				Input2 = InstanceInput {
					SourceOp = "gui",
					Source = "btnTopLeft",
					Width = 0.25,
				},
				Input3 = InstanceInput {
					SourceOp = "gui",
					Source = "btnUp",
					Width = 0.5,
				},
				Input4 = InstanceInput {
					SourceOp = "gui",
					Source = "btnTopRight",
					Width = 0.25,
				},
				Input5 = InstanceInput {
					SourceOp = "gui",
					Source = "btnLEFT",
					Width = 0.25,
				},
				Input6 = InstanceInput {
					SourceOp = "gui",
					Source = "btnBlank",
					Width = 0.5,
				},
				Input7 = InstanceInput {
					SourceOp = "gui",
					Source = "btnRIGHT",
					Width = 0.25,
				},
				Input8 = InstanceInput {
					SourceOp = "gui",
					Source = "btnBottomLeft",
					Width = 0.25,
				},
				Input9 = InstanceInput {
					SourceOp = "gui",
					Source = "btnBottom",
					Width = 0.5,
				},
				Input10 = InstanceInput {
					SourceOp = "gui",
					Source = "btnBottomRight",
					Width = 0.25,
				},
				Input11 = InstanceInput {
					SourceOp = "gui",
					Source = "panAmt",
					Default = 1,
				},
				Input12 = InstanceInput {
					SourceOp = "gui",
					Source = "invert_invert",
				},
				zrNest = InstanceInput {
					SourceOp = "gui",
					Source = "zrNest",
					Expression = "iif(PanMode>0,1,0)",
				},
				Input13 = InstanceInput {
					SourceOp = "gui",
					Source = "rotationTopLeft",
					Width = 0.25,
				},
				Input14 = InstanceInput {
					SourceOp = "gui",
					Source = "rotationUp",
					Width = 0.5,
				},
				Input15 = InstanceInput {
					SourceOp = "gui",
					Source = "rotationTopRight",
					Width = 0.25,
				},
				Input16 = InstanceInput {
					SourceOp = "gui",
					Source = "rotationLEFT",
					Width = 0.25,
				},
				Input17 = InstanceInput {
					SourceOp = "gui",
					Source = "rotationCenter",
					Width = 0.5,
				},
				Input18 = InstanceInput {
					SourceOp = "gui",
					Source = "rotationRIGHT",
					Width = 0.25,
				},
				Input19 = InstanceInput {
					SourceOp = "gui",
					Source = "rotationBottomLeft",
					Width = 0.25,
				},
				Input20 = InstanceInput {
					SourceOp = "gui",
					Source = "rotationBottom",
					Width = 0.5,
				},
				Input21 = InstanceInput {
					SourceOp = "gui",
					Source = "rotationBottomRight",
					Width = 0.25,
				},
				showFxCenter = InstanceInput {
					SourceOp = "gui",
					Source = "showFxCenter",
				},
				fxPointCenter = InstanceInput {
					SourceOp = "gui",
					Source = "fxPointCenter",
				},
				rotationNest = InstanceInput {
					SourceOp = "gui",
					Source = "rotationNest",
					Expression = "iif(PanMode==1,1,0)",
				},
				Input24 = InstanceInput {
					SourceOp = "gui",
					Source = "angle",
					Default = 0,
				},
				Input25 = InstanceInput {
					SourceOp = "gui",
					Source = "angle_invert",
				}
			},
			Outputs = {
				Output3 = InstanceOutput {
					SourceOp = "PipeRouter3",
					Source = "Output",
				}
			},
			ViewInfo = GroupInfo {
				Pos = { 330, 148.5 },
				Flags = {
					AllowPan = false,
					GridSnap = true,
					AutoSnap = true,
					RemoveRouters = true
				},
				Size = { 495, 198.364, 247.5, 24.2424 },
				Direction = "Horizontal",
				PipeStyle = "Direct",
				Scale = 1,
				Offset = { 0, 0 }
			},
			Tools = ordered() {
				PipeRouter3 = PipeRouter {
					CtrlWShown = false,
					Inputs = {
						Input = Input {
							SourceOp = "Merge1",
							Source = "Output",
						},
					},
					ViewInfo = PipeRouterInfo { Pos = { 219.5, 107.758 } },
				},
				showFxCenter = GroupOperator {
					PassThrough = true,
					CtrlWShown = false,
					NameSet = true,
					Outputs = {
						Output1 = InstanceOutput {
							SourceOp = "Merge2",
							Source = "Output",
						}
					},
					ViewInfo = GroupInfo {
						Pos = { 109.5, 140.758 },
						Flags = {
							AllowPan = false,
							GridSnap = true,
							AutoSnap = true,
							RemoveRouters = true
						},
						Size = { 236, 132.364, 118, 24.2424 },
						Direction = "Horizontal",
						PipeStyle = "Direct",
						Scale = 1,
						Offset = { -275, -172.864 }
					},
					Tools = ordered() {
						Background1_1 = Background {
							CtrlWShown = false,
							Inputs = {
								GlobalOut = Input { Value = 23, },
								Width = Input { Value = 1920, },
								Height = Input { Value = 1080, },
								UseFrameFormatSettings = Input { Value = 1, },
								["Gamut.SLogVersion"] = Input { Value = FuID { "SLog2" }, },
								TopLeftRed = Input { Value = 1, },
								TopLeftGreen = Input { Value = 1, },
								TopLeftBlue = Input { Value = 1, },
							},
							ViewInfo = OperatorInfo { Pos = { 330, 247.5 } },
						},
						Background1 = Background {
							CtrlWShown = false,
							Inputs = {
								GlobalOut = Input { Value = 23, },
								Width = Input { Value = 1920, },
								Height = Input { Value = 1080, },
								UseFrameFormatSettings = Input { Value = 1, },
								["Gamut.SLogVersion"] = Input { Value = FuID { "SLog2" }, },
								TopLeftRed = Input { Value = 1, },
								TopLeftGreen = Input { Value = 1, },
								TopLeftBlue = Input { Value = 1, },
							},
							ViewInfo = OperatorInfo { Pos = { 220, 247.5 } },
						},
						Transform1 = Transform {
							CtrlWShown = false,
							Inputs = {
								UseSizeAndAspect = Input { Value = 0, },
								Aspect = Input { Value = 0.01, },
								XSize = Input { Value = 0.003, },
								Input = Input {
									SourceOp = "Background1",
									Source = "Output",
								},
							},
							ViewInfo = OperatorInfo { Pos = { 220, 214.5 } },
						},
						Merge2 = Merge {
							CtrlWShown = false,
							Inputs = {
								Background = Input {
									SourceOp = "Transform1",
									Source = "Output",
								},
								Foreground = Input {
									SourceOp = "Transform1_1",
									Source = "Output",
								},
								PerformDepthMerge = Input { Value = 0, },
							},
							ViewInfo = OperatorInfo { Pos = { 275, 181.5 } },
						},
						Transform1_1 = Transform {
							CtrlWShown = false,
							Inputs = {
								UseSizeAndAspect = Input { Value = 0, },
								Aspect = Input { Value = 0.01, },
								YSize = Input { Value = 0.003, },
								Input = Input {
									SourceOp = "Background1_1",
									Source = "Output",
								},
							},
							ViewInfo = OperatorInfo { Pos = { 330, 214.5 } },
						}
					},
				},
				Merge1 = Merge {
					CtrlWShown = false,
					Inputs = {
						Background = Input {
							SourceOp = "Dissolve1",
							Source = "Output",
						},
						Foreground = Input {
							SourceOp = "Merge2",
							Source = "Output",
						},
						Center = Input {
							Value = { 0.5, 0 },
							Expression = "Point(driver.fxPivot.X,driver.fxPivot.Y) ",
						},
						ApplyMode = Input { Value = FuID { "Exclusion" }, },
						BurnIn = Input { Value = 1, },
						ClampCoverage = Input { Value = 0, },
						Edges = Input { Value = 2, },
						PerformDepthMerge = Input { Value = 0, },
					},
					ViewInfo = OperatorInfo { Pos = { 109.5, 107.758 } },
				},
				Dissolve1 = Dissolve {
					Transitions = {
						[0] = "DFTAddDissolve"
					},
					CtrlWShown = false,
					Inputs = {
						["DFTAlphaMerge.ApplyMode"] = Input { Value = FuID { "LinearDodge" }, },
						["DFTLumaRamp.Softness"] = Input { Value = 0.787, },
						["DFTWipe.Softness"] = Input { Value = 0.677, },
						Operation = Input { Value = FuID { "DFTAddDissolve" }, },
						Mix = Input {
							Value = 3.88380157397276e-06,
							Expression = "driver.pan/AnimPan.Scale",
						},
						Background = Input {
							SourceOp = "pTransform",
							Source = "Output",
						},
						Foreground = Input {
							SourceOp = "pTransform_1",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -0.5, 107.758 } },
				},
				pTransform_1 = Transform {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						SettingsNest = Input { Value = 0, },
						MotionBlur = Input { Value = 1, },
						Quality = Input {
							Value = 10,
							Expression = "pTransform.Quality",
						},
						ShutterAngle = Input {
							Value = 68,
							Expression = "pTransform.ShutterAngle",
						},
						CenterBias = Input {
							Value = 0.05,
							Expression = "pTransform.CenterBias",
						},
						SampleSpread = Input { Expression = "pTransform.SampleSpread", },
						Center = Input { Expression = ":\nwarp_fix = iif(pTransform_1.Edges == 3, 2, 1)\npan_direction = driver.pan * warp_fix\n\nif driver.PanMode.Value == \"none\" then\n    return Point(0.5, 0.5)\nelseif driver.PanMode.Value == \"right\" then\n    return Point(0.5+pan_direction, 0.5)\nelseif driver.PanMode.Value == \"left\" then\n    return Point(0.5-pan_direction , 0.5)\nelseif driver.PanMode.Value == \"up\" then\n    return Point(0.5, 0.5+pan_direction)\nelseif driver.PanMode.Value == \"down\" then\n    return Point(0.5, 0.5-pan_direction)\nelseif driver.PanMode.Value == \"top-left\" then\n    return Point(0.5-pan_direction, 0.5+pan_direction)\nelseif driver.PanMode.Value == \"top-right\" then\n    return Point(0.5+pan_direction, 0.5+pan_direction)\nelseif driver.PanMode.Value == \"bottom-left\" then\n    return Point(0.5-pan_direction, 0.5-pan_direction)\nelseif driver.PanMode.Value == \"bottom-right\" then\n    return Point(0.5+pan_direction, 0.5-pan_direction)\nend ", },
						Pivot = Input { Expression = "Point(driver.fxPivot.X,driver.fxPivot.Y)", },
						Angle = Input {
							Value = 359.998601831433,
							Expression = "iif(gui.angle_invert==0,driver.Angle-gui.angle,driver.Angle+gui.angle) ",
						},
						Edges = Input {
							Value = 1,
							Expression = "pTransform.Edges",
						},
						FilterMethod = Input { Expression = "pTransform.FilterMethod", },
						Input = Input {
							SourceOp = "PipeRouter2",
							Source = "Output",
						},
						CommentsNest = Input { Value = 0, },
						FrameRenderScriptNest = Input { Value = 0, },
					},
					ViewInfo = OperatorInfo { Pos = { -110.5, 74.7574 } },
				},
				pTransform = Transform {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						MotionBlur = Input { Value = 1, },
						Quality = Input { Value = 10, },
						ShutterAngle = Input { Value = 68, },
						CenterBias = Input { Value = 0.05, },
						Center = Input { Expression = ":\nwarp_fix = iif(pTransform.Edges == 3, 2, 1)\npan_direction = driver.pan * warp_fix\n\nif driver.PanMode.Value == \"none\" then\n    return Point(0.5, 0.5)\nelseif driver.PanMode.Value == \"right\" then\n    return Point(0.5+pan_direction, 0.5)\nelseif driver.PanMode.Value == \"left\" then\n    return Point(0.5-pan_direction , 0.5)\nelseif driver.PanMode.Value == \"up\" then\n    return Point(0.5, 0.5+pan_direction)\nelseif driver.PanMode.Value == \"down\" then\n    return Point(0.5, 0.5-pan_direction)\nelseif driver.PanMode.Value == \"top-left\" then\n    return Point(0.5-pan_direction, 0.5+pan_direction)\nelseif driver.PanMode.Value == \"top-right\" then\n    return Point(0.5+pan_direction, 0.5+pan_direction)\nelseif driver.PanMode.Value == \"bottom-left\" then\n    return Point(0.5-pan_direction, 0.5-pan_direction)\nelseif driver.PanMode.Value == \"bottom-right\" then\n    return Point(0.5+pan_direction, 0.5-pan_direction)\nend", },
						Pivot = Input { Expression = "Point(driver.fxPivot.X,driver.fxPivot.Y) ", },
						Angle = Input {
							Value = -0.00139816856663019,
							Expression = "driver.Angle",
						},
						Edges = Input { Value = 1, },
						Input = Input {
							SourceOp = "PipeRouter1",
							Source = "Output",
						},
					},
					ViewInfo = OperatorInfo { Pos = { -110.5, 107.758 } },
				},
				driver = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						PerformDepthMerge = Input { Value = 0, },
						pan = Input {
							SourceOp = "AnimPan",
							Source = "Value",
						},
						Angle = Input {
							SourceOp = "AnimAngle",
							Source = "Value",
						},
						PanMode = Input { Value = "none", },
						fxPivot = Input { Expression = "Point(gui.fxPointCenter.X, gui.fxPointCenter.Y)", },
					},
					ViewInfo = OperatorInfo { Pos = { -110.5, 41.7574 } },
					UserControls = ordered() {
						pan = { INPID_InputControl = "SliderControl", INP_Integer = false, LINKID_DataType = "Number", LINKS_Name = "pan", },
						xpan = { INPID_InputControl = "SliderControl", INP_Integer = false, LINKID_DataType = "Number", LINKS_Name = "xpan", },
						ypan = { INPID_InputControl = "SliderControl", INP_Integer = false, LINKID_DataType = "Number", LINKS_Name = "ypan", },
						Angle = {
							INPID_InputControl = "SliderControl",
							INP_Integer = false,
							LINKID_DataType = "Number",
							LINKS_Name = "Angle",
						},
						PanMode = { TEC_ReadOnly = false, LINKID_DataType = "Text", TEC_Wrap = false, INPID_InputControl = "TextEditControl", LINKS_Name = "PanMode", },
						fxPivot = {
							LINKS_Name = "Effect Pivot",
							INPID_PreviewControl = "PointControl",
							LINKID_DataType = "Point",
							INPID_InputControl = "OffsetControl",
						}
					}
				},
				gui = Merge {
					CtrlWShown = false,
					NameSet = true,
					Inputs = {
						test = Input { Value = 0.1, },
						fxCenter = Input { Value = 1, },
						PerformDepthMerge = Input { Value = 0, },
						panNest = Input { Expression = "iif(PanMode==0,1,0)", },
						panAmt = Input { Value = 1, },
						zrNest = Input { Expression = "iif(PanMode>0,1,0)", },
						rotationNest = Input { Expression = "iif(PanMode==1,1,0)", },
						angle_invert = Input { Value = 1, },
					},
					ViewInfo = OperatorInfo { Pos = { -110.5, 8.75737 } },
					UserControls = ordered() {
						PanMode = {
							{ MBTNC_AddButton = "Pan" },
							{ MBTNC_AddButton = "Rotate" },
							{ MBTNC_AddButton = "Zoom" },
							LINKID_DataType = "Number",
							INP_Integer = false,
							MBTNC_ShowBasicButton = true,
							INPID_InputControl = "MultiButtonControl",
							MBTNC_ShowName = false,
							MBTNC_StretchToFit = true,
							MBTNC_ShowToolTip = false,
							LINKS_Name = "Transition Mode",
						},
						panNest = {
							LBLC_DropDownButton = true,
							INPID_InputControl = "LabelControl",
							LBLC_NumInputs = 12,
							LINKS_Name = "panNest",
							INP_Default = 1,
							IC_Visible = false,
						},
						btnTopLeft = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "driver.PanMode[1] = 'top-left'",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.25,
							LINKS_Name = "X",
						},
						btnUp = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "driver.PanMode[1] = 'up'",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.5,
							LINKS_Name = "Up",
						},
						btnTopRight = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "driver.PanMode[1] = 'top-right'",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.25,
							LINKS_Name = "X",
						},
						btnLEFT = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "driver.PanMode[1] = 'left'",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.25,
							LINKS_Name = "Left",
						},
						btnBlank = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "driver.PanMode[1] = 'none'",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.5,
							LINKS_Name = "",
						},
						btnRIGHT = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "driver.PanMode[1] = 'right'",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.25,
							LINKS_Name = "Right",
						},
						btnBottomLeft = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "driver.PanMode[1] = 'bottom-left'",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.25,
							LINKS_Name = "X",
						},
						btnBottom = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "driver.PanMode[1] = 'down'",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.5,
							LINKS_Name = "Down",
						},
						btnBottomRight = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "driver.PanMode[1] = 'bottom-right'",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.25,
							LINKS_Name = "X",
						},
						pan_settings = {
							LBLC_DropDownButton = true,
							INPID_InputControl = "LabelControl",
							LBLC_NumInputs = 2,
							LINKS_Name = "Pan Settings",
							INP_Default = 1,
							IC_Visible = true,
						},
						panAmt = {
							LINKS_Name = "Pan Amount",
							INP_Integer = false,
							INP_MinAllowed = 1,
							LINKID_DataType = "Number",
							INPID_InputControl = "SliderControl",
							INP_MinScale = 1,
							INP_MaxScale = 10,
							INP_Default = 0,
						},
						invert_invert = {
							CBC_TriState = false,
							INP_Integer = false,
							INPID_InputControl = "CheckboxControl",
							LINKID_DataType = "Number",
							LINKS_Name = "Invert Pan",
						},
						zrNest = {
							LBLC_DropDownButton = true,
							INPID_InputControl = "LabelControl",
							LBLC_NumInputs = 11,
							LINKS_Name = "customNest",
							INP_Default = 1,
							IC_Visible = false,
						},
						rotationTopLeft = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "tool.fxPointCenter = {0,1}",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.25,
							LINKS_Name = "X",
						},
						rotationUp = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "tool.fxPointCenter = {0.5,1}",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.5,
							LINKS_Name = "Up",
						},
						rotationTopRight = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "tool.fxPointCenter = {1,1}",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.25,
							LINKS_Name = "X",
						},
						rotationLEFT = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "tool.fxPointCenter = {0,0.5}",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.25,
							LINKS_Name = "Left",
						},
						rotationCenter = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "tool.fxPointCenter = {0.5,0.5}",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.5,
							LINKS_Name = "Center",
						},
						rotationRIGHT = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "tool.fxPointCenter = {1,0.5}",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.25,
							LINKS_Name = "Right",
						},
						rotationBottomLeft = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "tool.fxPointCenter = {0,0}",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.25,
							LINKS_Name = "X",
						},
						rotationBottom = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "tool.fxPointCenter = {0.5,0}",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.5,
							LINKS_Name = "Down",
						},
						rotationBottomRight = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "tool.fxPointCenter = {1,0}",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							ICD_Width = 0.25,
							LINKS_Name = "X",
						},
						showFxCenter = {
							INP_MaxAllowed = 1000000,
							INP_Integer = false,
							INPID_InputControl = "ButtonControl",
							BTNCS_Execute = "dofile('C:/Users/Jeremiah/Python/Projects/resolve/ezPan/showFxCenter.lua')",
							INP_MaxScale = 1,
							INP_MinScale = 0,
							INP_MinAllowed = -1000000,
							LINKID_DataType = "Number",
							LINKS_Name = "Show Effect Center",
						},
						fxPointCenter = {
							LINKS_Name = "Effect Center",
							LINKID_DataType = "Point",
							INPID_InputControl = "OffsetControl",
						},
						rotationNest = {
							LBLC_DropDownButton = true,
							INPID_InputControl = "LabelControl",
							LBLC_NumInputs = 3,
							LINKS_Name = "customNest",
							INP_Default = 1,
							IC_Visible = false,
						},
						rotation_settings = {
							LBLC_DropDownButton = true,
							INPID_InputControl = "LabelControl",
							LBLC_NumInputs = 2,
							LINKS_Name = "Rotation Settings",
							INP_Default = 1,
							IC_Visible = true,
						},
						angle = {
							INP_Integer = false,
							LINKID_DataType = "Number",
							LINKS_Name = "Rotation",
							INPID_InputControl = "SliderControl",
							INP_Default = 0,
						},
						angle_invert = {
							CBC_TriState = false,
							INP_Integer = false,
							INPID_InputControl = "CheckboxControl",
							LINKID_DataType = "Number",
							LINKS_Name = "Invert Rotation",
						}
					}
				},
				PipeRouter1 = PipeRouter {
					CtrlWShown = false,
					ViewInfo = PipeRouterInfo { Pos = { -220.5, 107.758 } },
				},
				PipeRouter2 = PipeRouter {
					CtrlWShown = false,
					ViewInfo = PipeRouterInfo { Pos = { -220.5, 74.7574 } },
				}
			},
		},
		AnimPan = LUTLookup {
			CtrlWZoom = false,
			NameSet = true,
			Inputs = {
				Curve = Input { Value = FuID { "Easing" }, },
				EaseIn = Input { Value = FuID { "Quart" }, },
				EaseOut = Input { Value = FuID { "Cubic" }, },
				Lookup = Input {
					SourceOp = "AnimPanLookup",
					Source = "Value",
				},
				Scale = Input { Expression = "floor(gui.panAmt) ", },
			},
		},
		AnimPanLookup = LUTBezier {
			KeyColorSplines = {
				[0] = {
					[0] = { 0, RH = { 0.333333333333333, 0.333333333333333 }, Flags = { Linear = true } },
					[1] = { 1, LH = { 0.666666666666667, 0.666666666666667 }, Flags = { Linear = true } }
				}
			},
			SplineColor = { Red = 255, Green = 255, Blue = 255 },
			CtrlWZoom = false,
		},
		AnimAngle = LUTLookup {
			CtrlWZoom = false,
			NameSet = true,
			Inputs = {
				Source = Input { Value = FuID { "Custom" }, },
				Input = Input {
					Value = 0.000768580779381981,
					Expression = "iif(gui.angle_invert==1,-driver.pan,driver.pan)/AnimPan.Scale",
				},
				Lookup = Input {
					SourceOp = "AnimAngleLookup",
					Source = "Value",
				},
				Scale = Input {
					Value = 45,
					Expression = "gui.angle ",
				},
			},
		},
		AnimAngleLookup = LUTBezier {
			KeyColorSplines = {
				[0] = {
					[0] = { 0, RH = { 0.333333333333333, 0.333333333333333 }, Flags = { Linear = true } },
					[1] = { 1, LH = { 0.666666666666667, 0.666666666666667 }, Flags = { Linear = true } }
				}
			},
			SplineColor = { Red = 255, Green = 255, Blue = 255 },
			CtrlWZoom = false,
		}
	},
	ActiveTool = "bfxTransitions"
}